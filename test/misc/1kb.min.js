/*!MIT(c)paulmillr.com*/let p=2n**256n,_=p-0x1000003d1n,a=p-0x14551231950b75fc4402da1732fc9bebfn,w=(e="")=>{throw new Error(e)},f=(e,t=_)=>{let n=e%t;return n>=0n?n:t+n},d=(e,t)=>{(e===0n||t<=0n)&&w("no inverse n="+e+" mod="+t);let n=f(e,t),l=t,r=0n,u=1n,i=1n,x=0n;for(;n!==0n;){let b=l/n,c=l%n,h=r-i*b,Y=u-x*b;l=n,n=c,r=i,u=x,i=h,x=Y}return l===1n?f(r,t):w("no inverse")},o=(e,t)=>({x:e,y:t}),m={x:0n,y:0n},P=e=>{let t=e.x,n=e.y,l=f(3n*t**2n*d(2n*n,_)),r=f(l*l-2n*t),u=f(l*(t-r)-n);return o(r,u)},X=(e,t)=>{let n=e.x,l=e.y,r=t.x,u=t.y;if(n===0n||l===0n)return t;if(r===0n||u===0n)return e;if(n===r&&l===u)return P(e);if(n===r&&l===f(-u))return m;let i=f((u-l)*d(r-n,_)),x=f(i*i-n-r),b=f(i*(n-x)-l);return o(x,b)},E=0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798n,g=0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8n,s=o(E,g),y=(e,t)=>{let n=o(e.x,e.y),l=m;for(;t>0n;)t&1n&&(l=X(l,n)),n=P(n),t>>=1n;return l},A=e=>y(s,e),v=e=>{let t=Array.from(e,n=>n.toString(16).padStart(2,"0")).join("");return t?BigInt("0x"+t):0n},B=()=>{let e=crypto.getRandomValues(new Uint8Array(48));return f(v(e),a-1n)+1n},G=(e,t)=>{let n=v(e),l=t,r=0n,u=0n,i;do{let x=B(),b=d(x,a);i=y(s,x),r=f(i.x,a),u=f(b*f(n+l*r,a),a)}while(r===0n||u===0n);return u>a>>1n&&(u=f(-u,a)),{r,s:u}},R=(e,t,n)=>{let l=f(v(t),a),r=d(e.s,a),u=f(l*r,a),i=f(e.r*r,a),x=y(s,u),b=y(n,i),c=X(x,b);return f(c.x,a)===e.r};export {A as _getPublicKey, G as _sign, R as _verify};
