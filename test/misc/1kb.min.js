/*MIT(c)paulmillr.com*/const y=2n**256n-0x1000003d1n,f=2n**256n-0x14551231950b75fc4402da1732fc9bebfn,h=(n="")=>{throw new Error(n)},s=(n,t=y)=>{const o=n%t;return o>=0n?o:t+o},x=(n,t)=>{(n===0n||t<=0n)&&h("no inverse n="+n+" mod="+t);let o=s(n,t),c=t,r=0n,e=1n,u=1n,i=0n;for(;o!==0n;){const a=c/o,l=c%o,v=r-u*a,X=e-i*a;c=o,o=l,r=u,e=i,u=v,i=X}return c===1n?s(r,t):h("no inverse")},b=(n,t)=>({x:n,y:t}),m={x:0n,y:0n},w=n=>{const[t,o]=[n.x,n.y],c=s(3n*t**2n*x(2n*o,y)),r=s(c*c-2n*t),e=s(c*(t-r)-o);return b(r,e)},P=(n,t)=>{const[o,c,r,e]=[n.x,n.y,t.x,t.y];if(o===0n||c===0n)return t;if(r===0n||e===0n)return n;if(o===r&&c===e)return w(n);if(o===r&&c===s(-e))return m;const u=s((e-c)*x(r-o,y)),i=s(u*u-o-r),a=s(u*(o-i)-c);return b(i,a)},Y=0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798n,E=0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8n,_=b(Y,E),d=(n,t)=>{let o=b(n.x,n.y),c=m;for(;t>0n;)t&1n&&(c=P(c,o)),o=w(o),t>>=1n;return c};function g(n){return d(_,n)}const p=n=>{const t=Array.from(n).map(o=>o.toString(16).padStart(2,"0")).join("");return t?BigInt("0x"+t):0n};function A(){const n=crypto.getRandomValues(new Uint8Array(48));return s(p(n),f-1n)+1n}function B(n,t){const o=p(n),c=t;let r=0n,e=0n,u;do{const i=A(),a=x(i,f);u=d(_,i),r=s(u.x,f),e=s(a*s(o+c*r,f),f)}while(r===0n||e===0n);return e>f>>1n&&(e=s(-e,f)),{r,s:e}}function G(n,t,o){const c=s(p(t),f),r=x(n.s,f),e=s(c*r,f),u=s(n.r*r,f),i=d(_,e),a=d(o,u),l=P(i,a);return s(l.x,f)===n.r}export { g as _getPublicKey, B as _sign, G as _verify };
